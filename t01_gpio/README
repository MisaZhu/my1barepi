-----------
TUTORIAL 01
-----------

This is an introduction to bare-metal programming on Raspberry Pi using
C language. This module shows how a software can be written in a modular
(and reusable) code structure.

---------
Objective
---------

1- To understand how a GPIO pin interfacing can be done
2- To review modular coding style

----------
Background
----------

This module shows how the board can be connected to external (off-board) LED
and switch. The example program will blink an LED that is connected to GPIO2
pin (active low) whenever a switch at GPIO3 pin (active low) is pushed.

When working towards developing larger and more complex code, it is nice to
have reusable codes in appropriately named functions (modular programming).
Consequently, the modularized codes can be generalized and 'packed' into a
'library' module that can be used in the subsequent tutorials. We will look
into this later.

--------
Contents
--------

All source files are placed in the 'src' folder. For simple projects, 'boot.s'
need no further changes. All application-centric codes should be in 'main.c'.

-----------
ThingsToTry
-----------

* Imitate clock delay
  - get the loop count delay for 0.5 second (for a 1s period)
  - thus, getting a 1Hz blinking rate!
* Utilize event detection!
  - an input GPIO pin can be further configured to have event detection
  - toggle another LED
    = after every 3 blinks of main LED
    = if a button is pushed during that 3 blinks

