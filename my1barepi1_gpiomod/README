----------
TUTORIAL 1
----------

This is an introduction to bare-metal programming on Raspberry Pi using
C language. This module shows how the codes in TUTORIAL 0c can be rewritten
into a modular (and reusable) code structure that will be used in subsequent
code tutorials.

---------
Objective
---------

1- To analyze multiple-source (modular) project file structure
2- To understand how a GPIO module can be created
3- To understand how GPIO pin external interfacing is done

----------
Background
----------

When working towards developing larger and more complex code, it is nice to
have reusable codes in appropriately named functions that are accessible from
other modules (modular programming). This tutorial's main purpose is to show
how the GPIO-related codes can be generalized and 'packed' into a 'library'
module.

On the hardware side, this module also expects the board to be connected to
external (off-board) LED and switch. The example program will blink an LED that
is connected to GPIO2 pin (active low) whenever a switch at GPIO3 pin (active
low) is pushed.

--------
Contents
--------

All source codes are placed in the 'src' folder. Main code is expected in
in 'main.c', while the GPIO module is written in 'gpio.c' source and 'gpio.h'
header files. A 'boot.s' is introduced here as the entry point. This is
necessary to initialize the stack pointer (which is usually necessary when
we need to execute function calls. The list of objects files required by the
application must be listed in the makefile (OBJLST variable) for them to be
included in the build.

------------------
ThingsToThinkAbout
------------------

A GPIO configured as input pin can be further configured to have event (signal
changes) detection mechanisms. Find out why this is actually a very useful
feature to have. (Hint: How long are you willing to push - and hold - that
button at a pedestrian crossing or an elevator? :p)

---------
Challenge
---------

See you if can extend the GPIO library module to include input event detection.
Write an example application to test the functions you created.
