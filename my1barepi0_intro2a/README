-----------
TUTORIAL 0a
-----------

This is an introduction to bare-metal programming on Raspberry Pi using
assembly language. This module creates a program that blinks the ACT LED.

The three files provided this module:

- makefile
  = contains the build method for bare-metal programming
  = create kernel.img to be copied into (micro)SD card
  = also creates LST and MAP file for detailed info on created binaries
- kernel.ld
  = places 'code segment' at address 0x8000
  = places our bare-metal code at the start of code segment
- main.s
  = an example for bare-metal code in assembly language
  = this one simply blinks the ACT LED (GPIO access)
  = need to understand physical vs virtual address

The makefile in this module allows building kernel.img from any single-file
assembly source code (e.g. type 'make test.img' to create kernel.img from
an assembly source file named test.s).
